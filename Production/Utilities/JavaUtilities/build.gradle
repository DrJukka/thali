/*
Copyright (c) Microsoft Open Technologies, Inc.
All Rights Reserved
Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED,
INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache 2 License for the specific language governing permissions and limitations under the License.
*/

apply plugin: 'java'
apply plugin: 'maven'
apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/0.3.0/javafx.plugin"

repositories {
    mavenLocal()
    mavenCentral()
}

javafx {
    mainClass = 'com.msopentech.thali.utilities.java.JavaFXBridgeManager'
}

dependencies {
    compile 'com.msopentech.thali:ThaliUtilitiesUniversal:0.0.1'

    testCompile 'junit:junit:4.11'
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

            pom.version = "0.0.1"
            pom.groupId = 'com.msopentech.thali'
            pom.artifactId = 'ThaliUtilitiesJava'
            pom.project {
                licenses {
                    license {
                        name 'Apache 2.0'
                        url 'https://thali.codeplex.com/SourceControl/latest#license.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

task generateJavadocs(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    source = sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
    archives generateJavadocs
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

task installLocal(dependsOn: uploadArchives)
